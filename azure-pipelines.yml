# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

resources:
- repo: self

stages:
- stage: Build
  displayName: Build Stage
  jobs:
  - job: Build
    displayName: Build 

    pool:
     vmImage: 'ubuntu-latest'
    steps:
  
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false

    - task: Docker@2
      inputs:
        containerRegistry: 'DOCKERSC'
        repository: 'naveen412/azurepipeline'
        command: 'buildAndPush'
        Dockerfile: 'Dockerfile'

    - upload: manifests
      artifact: manifests

- stage: Deploy
  displayName: Deploy Stage
  jobs:
  - job: Deploy
    displayName: Deploy 

    pool:
     vmImage: 'ubuntu-latest'
    
    steps:
      - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
        inputs:
          terraformVersion: '2.52.0'

      - task: TerraformCLI@0
        inputs:
          command: 'init'
          allowTelemetryCollection: true
         
      - task: TerraformCLI@0
        inputs:
          command: 'validate'
          allowTelemetryCollection: true

      - task: TerraformCLI@0
        inputs:
          command: 'plan'
          workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
          allowTelemetryCollection: true
      - task: TerraformCLI@0
        inputs:
          command: 'apply'
          workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
          allowTelemetryCollection: true
      - task: AzureRmWebAppDeployment@4
        inputs:
          ConnectionType: 'AzureRM'
          azureSubscription: 'Free Trial(f87aaef8-047b-488d-bf1c-b9837e226a9f)'
          appType: 'webAppLinux'
          WebAppName: 'naveenk1'
          packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
          




  